#Rename this file to .env (remove the example in front).

#Power at witch the device is detected to be started (I think the unit is watt).
POWER_THRESHOLD = 50 youremail

#Name of your device in the TPLink app.
ALIAS_DEVICE = Pump

#Gmail account you will be using to send email.
#I strongly recommend creating a new gmail account for this app since you will have to give permission to that account for unauthorized google app.
#https://hotter.io/docs/email-accounts/secure-app-gmail/
EMAIL_SENDER = @gmail.com

#Password for the sender email.
PASS_EMAIL_SENDER = password

#Email to witch you will received the alerts. I use the same but it could be another one.
EMAIL_RECEIVER = youremail@gmail.com

#Filename of the log. It will be appended with a .log.
LOG_FILENAME = Pump

#Number of time in second the pump can be idle before you get an alert.
IDLE_THRESHOLD = 28000  

#Time in second between each of idle alert message in a period of alert threshold exceeded.
REPEAT_IDLE_ALERT_EVERY = 1800

#Alert if the device running for more that threshold in second each time it starts.
DEVICE_RUNNING_TIME_THRESHOLD = 1800

#Time in second between each of running alert message in a period of alert threshold exceeded.
REPEAT_RUNNING_ALERT_EVERY = 900


#Number of line of the log to send in the email.
NB_LINE_LOG_EMAIL = 50

#--------------------------------
# Cloud API related
#--------------------------------
#Use tplink-cloud-api if “cloud” otherwise use tplink-smarthome-api. Other parameters below only usefull for cloud API.
# cloud and lan should be use.   NOT sure about text to the left on this line
API_SELECTION = not cloud

#Username to connect in TPLink app.
USER_TPLINK = youremail@gmail.com

#Password to connect in TPLink app.
PASS_TPLINK = password

#Thats the time between each poll to the power of the device in second.
WAIT_BETWEEN_READ = 10

